{
    "pipes": [],
    "interfaces": [
        {
            "name": "ExampleFlatNode",
            "id": "interface-ExampleFlatNode-5a2126d76f94255cf97029bfe03684cf1aeb3678c7f7e3c94074e53196dec615b1b8aad2c31ac94934687c157e6750e1e89935630d8124e5b836ddd4b63bf6c2",
            "file": "src/app/data/EquipmentСatalog.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FoodNode {\r\n    name: string;\r\n    children?: FoodNode[];\r\n  }\r\n  \r\nexport const TREE_DATA: FoodNode[] = [\r\n    {\r\n      name: 'Экскаваторы',\r\n      children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    },\r\n    {\r\n        name: 'Бульдозеры'\r\n      },\r\n      {\r\n        name: 'Буровое оборудование',\r\n        children: [{name: 'Установки вертикального бурения'}, {name: 'Установки горизонтального бурения'}, {name: 'Бензорубы'}],\r\n      },\r\n      {\r\n        name: 'Погрузчики строительные',\r\n        children: [{name: 'Погрузчики фронтальные'}, {name: 'Погрузчики телескопические'}, {name: 'Мини-погрузчики'}, {name: 'Мини-погрузчики гусенечные'}],\r\n      },\r\n      {\r\n        name: 'Краны строительные',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Подъемники строительные',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Разная спецтехника',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Автомобили, грузоперевозки',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n  ];\r\n  \r\n  /** Flat node with expandable and level information */\r\n  export  interface ExampleFlatNode {\r\n    expandable: boolean;\r\n    name: string;\r\n    level: number;\r\n  }",
            "properties": [
                {
                    "name": "expandable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 122
                },
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 124
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 123
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Flat node with expandable and level information</p>\n",
            "rawdescription": "\nFlat node with expandable and level information",
            "methods": [],
            "extends": []
        },
        {
            "name": "FoodNode",
            "id": "interface-FoodNode-5a2126d76f94255cf97029bfe03684cf1aeb3678c7f7e3c94074e53196dec615b1b8aad2c31ac94934687c157e6750e1e89935630d8124e5b836ddd4b63bf6c2",
            "file": "src/app/data/EquipmentСatalog.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FoodNode {\r\n    name: string;\r\n    children?: FoodNode[];\r\n  }\r\n  \r\nexport const TREE_DATA: FoodNode[] = [\r\n    {\r\n      name: 'Экскаваторы',\r\n      children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    },\r\n    {\r\n        name: 'Бульдозеры'\r\n      },\r\n      {\r\n        name: 'Буровое оборудование',\r\n        children: [{name: 'Установки вертикального бурения'}, {name: 'Установки горизонтального бурения'}, {name: 'Бензорубы'}],\r\n      },\r\n      {\r\n        name: 'Погрузчики строительные',\r\n        children: [{name: 'Погрузчики фронтальные'}, {name: 'Погрузчики телескопические'}, {name: 'Мини-погрузчики'}, {name: 'Мини-погрузчики гусенечные'}],\r\n      },\r\n      {\r\n        name: 'Краны строительные',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Подъемники строительные',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Разная спецтехника',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Автомобили, грузоперевозки',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n  ];\r\n  \r\n  /** Flat node with expandable and level information */\r\n  export  interface ExampleFlatNode {\r\n    expandable: boolean;\r\n    name: string;\r\n    level: number;\r\n  }",
            "properties": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FoodNode[]",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AllCategoryComponent",
            "id": "component-AllCategoryComponent-4f72880498e54e71dd491457734af295aac9183f8eac7183475d5763cc8e81b40fb4d131cde4221a93ddb492b4b1f0d11ac1680fdda8200bc321c4021cc630af",
            "file": "src/app/all-category/all-category.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-all-category",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./all-category.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_transformer",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dataSource",
                    "defaultValue": "new MatTreeFlatDataSource(this.treeControl, this.treeFlattener)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "hasChild",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "treeControl",
                    "defaultValue": "new FlatTreeControl<ExampleFlatNode>(\n    node => node.level,\n    node => node.expandable,\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "treeFlattener",
                    "defaultValue": "new MatTreeFlattener(\n    this._transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children,\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatTreeModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatTreeFlatDataSource, MatTreeFlattener, MatTreeModule} from '@angular/material/tree';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {TREE_DATA, ExampleFlatNode, FoodNode} from '../data/EquipmentСatalog'\n\n\n\n\n@Component({\n  selector: 'app-all-category',\n  standalone: true,\n  imports: [CommonModule, MatTreeModule, MatButtonModule, MatIconModule],\n  templateUrl: './all-category.component.html',\n  styleUrl: './all-category.component.scss'\n  \n})\n\nexport class AllCategoryComponent {\n  private _transformer = (node: FoodNode, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      level: level,\n    };\n  };\n\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n    node => node.level,\n    node => node.expandable,\n  );\n\n  treeFlattener = new MatTreeFlattener(\n    this._transformer,\n    node => node.level,\n    node => node.expandable,\n    node => node.children,\n  );\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  constructor() {\n    this.dataSource.data = TREE_DATA;\n  }\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n}\n\n",
            "styleUrl": "./all-category.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 42
            },
            "extends": [],
            "templateData": "<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" >\n  <!-- This is the tree node template for leaf nodes -->\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n    <!-- use a disabled button to provide padding for tree leaf -->\n    <button mat-icon-button disabled></button>\n    {{node.name}}\n  </mat-tree-node>\n  <!-- This is the tree node template for expandable nodes -->\n  <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n    <button mat-icon-button matTreeNodeToggle\n            [attr.aria-label]=\"'Toggle ' + node.name\">\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button>\n    {{node.name}}\n  </mat-tree-node>\n</mat-tree>"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-a93d614e394c5929cd31638a58247eda9b5df8cfc13490d88481f340975c91ea2f91c4aa608024b801dd16ce187982cf9e4113f28fe7afff98ce9f1091694dd5",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'EquipmentRental'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "NavComponent",
                    "type": "component"
                },
                {
                    "name": "AllCategoryComponent",
                    "type": "component"
                },
                {
                    "name": "MatTreeModule",
                    "type": "module"
                },
                {
                    "name": "SearchComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterOutlet } from '@angular/router';\nimport { NavComponent } from './nav/nav.component';\nimport { AllCategoryComponent } from './all-category/all-category.component';\nimport {MatTreeModule} from '@angular/material/tree';\nimport { SearchComponent } from './search/search.component';\n// import {TREE_DATA, ExampleFlatNode, FoodNode} from '../data/technick'\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, RouterOutlet, NavComponent, AllCategoryComponent, MatTreeModule, SearchComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'EquipmentRental';\n}\n\n\n\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-nav></app-nav>\r\n<app-all-category></app-all-category>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 798,
                            "end": 811,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 799,
                                "end": 807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "CategoryComponent",
            "id": "component-CategoryComponent-93fb9a4527db67f9e04d3e3fab74910a57425da6c467b98ece711b53f06956c917601342406a77d4c7aefe85e91b68e3a9c3e09eb54d7f1c3b4f79a467d29e9d",
            "file": "src/app/category/category.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-category",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./category.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "MatExpansionModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\n\n\n@Component({\n  selector: 'app-category',\n  standalone: true,\n  imports: [MatExpansionModule],\n  templateUrl: './category.component.html',\n  styleUrl: './category.component.scss'\n})\nexport class CategoryComponent {\n\n}\n",
            "styleUrl": "./category.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-accordion>\n    <mat-expansion-panel hideToggle>\n        <mat-expansion-panel-header>\n            <mat-panel-title>\n                Пример 1 категории техники\n            </mat-panel-title>\n        </mat-expansion-panel-header>\n    <div>\n        <a href=\"/\">Вид 1</a>\n    </div>\n        <a href=\"/\">Вид 2</a>\n    </mat-expansion-panel>\n</mat-accordion>"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-8a60337cd99521c7582c2a72c84db07777cc4769e848fd04b47a2e0271da9c95164593ad36dab9db1ee343bdc5c1e938ce8fbb3c6d2d2aa468edd1d3aa2edf10",
            "file": "src/app/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.scss'\n})\nexport class FooterComponent {\n\n}\n",
            "styleUrl": "./footer.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>footer works!</p>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cad94b233ec8e80ceb541e7972c5f9737e08237b4e137112f3987ca48ee0cce5c0d57798d41daa5d4d24d6bdbb2df1606ab68cca2aa0a1785e38f99f3cac0729",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "LigthComponent",
            "id": "component-LigthComponent-f000bd43e115519cf9d0daa2add93fa45fbbfd0dbc32d65bc36e1b8178d33ef2379602308e25ac79ca875ef31217d86a238f7dcc97cf5f275b05a03d48314174",
            "file": "src/app/ligth/ligth.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-ligth",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./ligth.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-ligth',\n  standalone: true,\n  imports: [],\n  templateUrl: './ligth.component.html',\n  styleUrl: './ligth.component.scss'\n})\nexport class LigthComponent {\n\n}\n",
            "styleUrl": "./ligth.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<p>ligth works!</p>\n"
        },
        {
            "name": "NavComponent",
            "id": "component-NavComponent-f14da8328bbe3faf9ac663ae0fbfb01c19fb75b48a5fdabc8148cf9f91ec2bd8fa1745ce6d06874ab198eda39fbd3222b994d2e7416809a6f8457e2dc52af5e8",
            "file": "src/app/nav/nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-nav",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./nav.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "message",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "emitter",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "buttonClicked",
                    "args": [
                        {
                            "name": "note",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "note",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatToolbarModule",
                    "type": "module"
                },
                {
                    "name": "MatButtonModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "SearchComponent",
                    "type": "component"
                },
                {
                    "name": "MatMenuModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component,  EventEmitter, Input, Output } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { SearchComponent} from '../search/search.component';\nimport {MatMenuModule} from '@angular/material/menu';\n\n\n\n@Component({\n  selector: 'app-nav',\n  standalone: true,\n  imports: [CommonModule, MatToolbarModule, MatButtonModule, MatIconModule, MatFormFieldModule, SearchComponent, MatMenuModule],\n  templateUrl: './nav.component.html',\n  styleUrl: './nav.component.scss'\n})\nexport class NavComponent {\n  @Input() message: string = '';\n  @Output() emitter = new EventEmitter();\n\n  buttonClicked(note: string) {\n    this.emitter.emit({\n      event: 'NavPanelComponent:BUTTON_CLICKED',\n      data: {note},\n    });\n  }\n}\n",
            "styleUrl": "./nav.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-toolbar color = \"primary\">\n  <span class=\"marg-logo\"> <mat-icon> agriculture </mat-icon>  HardRent </span>\n  <button class=\"marg-tool\">\n    <span mat-icon-button >Главная</span>\n  </button>\n  <button class=\"marg-tool\">\n    <span>Арендодатели</span>\n  </button>\n  <button class=\"marg-tool\">\n    <span>Услуги</span>\n  </button>\n  <button class=\"marg-tool\">\n    <span>Калькулятор</span>\n  </button>\n  <button class=\"marg-tool\">\n    <span>Новости</span>\n  </button>\n  <button class=\"marg-tool\">\n    <span>Условия сотрудничества</span>\n  </button>\n  <span class=\"example-spacer\"></span>\n  <!-- <app-search></app-search> -->\n  <button mat-icon-button>\n    <mat-icon>search</mat-icon>\n  </button>\n  <button mat-icon-button>\n    <mat-icon> bookmark </mat-icon> \n  </button>\n  <button mat-icon-button >\n    <mat-icon> mail </mat-icon> \n  </button>\n\n  <button [matMenuTriggerFor]=\"account\"  mat-icon-button class=\"example-icon\">\n    <mat-icon>account_circle</mat-icon>\n  </button>\n\n  <mat-menu #menu=\"matMenu\">\n    <button mat-menu-item>\n      <mat-icon>dialpad</mat-icon>\n      <span>Redial</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>voicemail</mat-icon>\n      <span>Check voice mail</span>\n    </button>\n    <button mat-menu-item>\n      <mat-icon>notifications_off</mat-icon>\n      <span>Disable alerts</span>\n    </button>\n  </mat-menu>\n\n  <mat-menu #account=\"matMenu\">\n    <button mat-menu-item (click)=\"buttonClicked('Sign out')\">\n      <mat-icon>logout</mat-icon>\n      <span>Sign out</span>\n    </button>\n  </mat-menu>\n  </mat-toolbar>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-d32b0f19628254ea3fc5526c4d4564ada1cc83cf936759006d90a46f5874b02a3359e331bddda20b22e74a616a6443c660602ba74dd38ebe1160759e0de6f7ba",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "SearchComponent",
            "id": "component-SearchComponent-12e5954d2b4b566e0e60ecfadd053c5b935a7d8f13c23845d216fbdf5c6a06fce994a1e0b2ae65d6761aca3fa698ab1bc1a212e6d5751a0f4cdf3923d4005240",
            "file": "src/app/search/search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-search",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n  selector: 'app-search',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatIconModule],\n  templateUrl: './search.component.html',\n  styleUrl: './search.component.scss'\n})\nexport class SearchComponent {\n\n}\n",
            "styleUrl": "./search.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<mat-form-field>\n  <mat-label>search</mat-label>\n  <input matInput type=\"text\" placeholder=\"Введите запрос\">\n</mat-form-field>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideRouter(routes), provideClientHydration(), provideAnimations()]\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  render: (args: ButtonComponent) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<HeaderComponent>",
                "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PageComponent>",
                "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/all-category/all-category.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AllCategoryComponent>",
                "defaultValue": "{\r\n  title: 'UI Components/AllCategoryComponent',\r\n  component: AllCategoryComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: AllCategoryComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/category/category.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CategoryComponent>",
                "defaultValue": "{\r\n  title: 'UI Components/CategoryComponent',\r\n  component: CategoryComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, BrowserAnimationsModule],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: CategoryComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FooterComponent>",
                "defaultValue": "{\r\n  title: 'UI Components/FooterComponent',\r\n  component: FooterComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: FooterComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ligth/ligth.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LigthComponent>",
                "defaultValue": "{\r\n  title: 'UI Components/LigthComponent',\r\n  component: LigthComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: LigthComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/nav/nav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NavComponent>",
                "defaultValue": "{\r\n  title: 'UI Components/NavComponent',\r\n  component: NavComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, MatToolbarModule, MatButtonModule, MatIconModule, MatFormFieldModule, SearchComponent],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: NavComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SearchComponent>",
                "defaultValue": "{\r\n  title: 'UI Components/SearchComponent',\r\n  component: SearchComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, MatFormFieldModule, MatIconModule],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: SearchComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/all-category/all-category.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/category/category.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/ligth/ligth.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/nav/nav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideServerRendering()\n  ]\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
            },
            {
                "name": "TREE_DATA",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/data/EquipmentСatalog.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FoodNode[]",
                "defaultValue": "[\r\n    {\r\n      name: 'Экскаваторы',\r\n      children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    },\r\n    {\r\n        name: 'Бульдозеры'\r\n      },\r\n      {\r\n        name: 'Буровое оборудование',\r\n        children: [{name: 'Установки вертикального бурения'}, {name: 'Установки горизонтального бурения'}, {name: 'Бензорубы'}],\r\n      },\r\n      {\r\n        name: 'Погрузчики строительные',\r\n        children: [{name: 'Погрузчики фронтальные'}, {name: 'Погрузчики телескопические'}, {name: 'Мини-погрузчики'}, {name: 'Мини-погрузчики гусенечные'}],\r\n      },\r\n      {\r\n        name: 'Краны строительные',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Подъемники строительные',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Разная спецтехника',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Автомобили, грузоперевозки',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n  ]"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "src/stories/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<HeaderComponent>",
                "file": "src/stories/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PageComponent>",
                "file": "src/stories/page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AllCategoryComponent>",
                "file": "src/app/all-category/all-category.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CategoryComponent>",
                "file": "src/app/category/category.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FooterComponent>",
                "file": "src/app/footer/footer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LigthComponent>",
                "file": "src/app/ligth/ligth.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NavComponent>",
                "file": "src/app/nav/nav.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SearchComponent>",
                "file": "src/app/search/search.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideRouter(routes), provideClientHydration(), provideAnimations()]\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideServerRendering()\n  ]\n}"
                }
            ],
            "src/stories/button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'large',\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  title: 'Example/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  render: (args: ButtonComponent) => ({\n    props: {\n      backgroundColor: null,\n      ...args,\n    },\n  }),\n  argTypes: {\n    backgroundColor: {\n      control: 'color',\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    primary: true,\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button',\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'small',\n    label: 'Button',\n  },\n}"
                }
            ],
            "src/stories/header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    user: {\n      name: 'Jane Doe',\n    },\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<HeaderComponent>",
                    "defaultValue": "{\n  title: 'Example/Header',\n  component: HeaderComponent,\n  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/writing-docs/autodocs\n  tags: ['autodocs'],\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "src/stories/page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const loginButton = canvas.getByRole('button', { name: /Log in/i });\n    await expect(loginButton).toBeInTheDocument();\n    await userEvent.click(loginButton);\n    await expect(loginButton).not.toBeInTheDocument();\n\n    const logoutButton = canvas.getByRole('button', { name: /Log out/i });\n    await expect(logoutButton).toBeInTheDocument();\n  },\n}"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PageComponent>",
                    "defaultValue": "{\n  title: 'Example/Page',\n  component: PageComponent,\n  parameters: {\n    // More on how to position stories at: https://storybook.js.org/docs/configure/story-layout\n    layout: 'fullscreen',\n  },\n}"
                }
            ],
            "src/app/all-category/all-category.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/all-category/all-category.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AllCategoryComponent>",
                    "defaultValue": "{\r\n  title: 'UI Components/AllCategoryComponent',\r\n  component: AllCategoryComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: AllCategoryComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/all-category/all-category.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
                }
            ],
            "src/app/category/category.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/category/category.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CategoryComponent>",
                    "defaultValue": "{\r\n  title: 'UI Components/CategoryComponent',\r\n  component: CategoryComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, BrowserAnimationsModule],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: CategoryComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/category/category.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
                }
            ],
            "src/app/footer/footer.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FooterComponent>",
                    "defaultValue": "{\r\n  title: 'UI Components/FooterComponent',\r\n  component: FooterComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: FooterComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
                }
            ],
            "src/app/ligth/ligth.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ligth/ligth.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LigthComponent>",
                    "defaultValue": "{\r\n  title: 'UI Components/LigthComponent',\r\n  component: LigthComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: LigthComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/ligth/ligth.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
                }
            ],
            "src/app/nav/nav.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/nav/nav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NavComponent>",
                    "defaultValue": "{\r\n  title: 'UI Components/NavComponent',\r\n  component: NavComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, MatToolbarModule, MatButtonModule, MatIconModule, MatFormFieldModule, SearchComponent],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: NavComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/nav/nav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
                }
            ],
            "src/app/search/search.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SearchComponent>",
                    "defaultValue": "{\r\n  title: 'UI Components/SearchComponent',\r\n  component: SearchComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, MatFormFieldModule, MatIconModule],\r\n    }),\r\n    componentWrapperDecorator(\r\n      (story) => `<div>${story}</div>`\r\n    ),\r\n  ],\r\n  render: (args: SearchComponent) => ({\r\n    props: {\r\n      ...args,\r\n    },\r\n  }),\r\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n  },\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ],
            "src/app/data/EquipmentСatalog.ts": [
                {
                    "name": "TREE_DATA",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/data/EquipmentСatalog.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FoodNode[]",
                    "defaultValue": "[\r\n    {\r\n      name: 'Экскаваторы',\r\n      children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    },\r\n    {\r\n        name: 'Бульдозеры'\r\n      },\r\n      {\r\n        name: 'Буровое оборудование',\r\n        children: [{name: 'Установки вертикального бурения'}, {name: 'Установки горизонтального бурения'}, {name: 'Бензорубы'}],\r\n      },\r\n      {\r\n        name: 'Погрузчики строительные',\r\n        children: [{name: 'Погрузчики фронтальные'}, {name: 'Погрузчики телескопические'}, {name: 'Мини-погрузчики'}, {name: 'Мини-погрузчики гусенечные'}],\r\n      },\r\n      {\r\n        name: 'Краны строительные',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Подъемники строительные',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Разная спецтехника',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n      {\r\n        name: 'Автомобили, грузоперевозки',\r\n        children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n      },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n    //   {\r\n    //     name: 'Погрузчики',\r\n    //     children: [{name: 'Гусенечные экскаватроры'}, {name: 'Колесные экскаватроры'}, {name: 'Экскаватроры-планировщики'}, {name: 'мини-экскаватроры'}, {name: 'Экскаватроры-погрузчики'}],\r\n    //   },\r\n  ]"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/stories/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "src/stories/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/header.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<HeaderComponent>",
                    "file": "src/stories/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/stories/page.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PageComponent>",
                    "file": "src/stories/page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/all-category/all-category.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AllCategoryComponent>",
                    "file": "src/app/all-category/all-category.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/category/category.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CategoryComponent>",
                    "file": "src/app/category/category.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/footer/footer.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FooterComponent>",
                    "file": "src/app/footer/footer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/ligth/ligth.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LigthComponent>",
                    "file": "src/app/ligth/ligth.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/nav/nav.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NavComponent>",
                    "file": "src/app/nav/nav.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "src/app/search/search.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SearchComponent>",
                    "file": "src/app/search/search.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/all-category/all-category.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AllCategoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/all-category/all-category.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/all-category/all-category.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/category/category.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/category/category.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/category/category.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/data/EquipmentСatalog.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ExampleFlatNode",
                "coveragePercent": 25,
                "coverageCount": "1/4",
                "status": "low"
            },
            {
                "filePath": "src/app/data/EquipmentСatalog.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FoodNode",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/data/EquipmentСatalog.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TREE_DATA",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/footer/footer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ligth/ligth.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LigthComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ligth/ligth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/ligth/ligth.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/nav/nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/nav/nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/nav/nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/search/search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/search/search.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}